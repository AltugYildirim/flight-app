openapi: 3.0.3
info:
  title: Flights App
  description: |
    A collection of operations managing users and flights
  contact:
    name: George K
    email: georgek@nonamesecurity.com
  version: v1

servers:
  - # local server
    url: https://localhost:58443/api/v1
    description: |
      Local server
  - # Net accessible
    url: https://<aws-host>:5843/api/v1
    description: |
      Net accessible server
      
tags:
  - name: Users
  - name: Flights
  
paths:

  /users:

    post:
      description: |
        Anyone can self-register with role user provided
        there is no authorization header present.
        Admin's can register other users with any role.
        Operators can register only normal users
      tags:
        - Users
      security: 
        - nonameJWT: []
        - {}
      requestBody:
        content:
          application/json:
            schema: 
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: |
            Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: success

  /tokens:
  
    post:
      tags:
        - Users
      security:
        - basicAuth: []
      responses:
        "201":
          description: |
            Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /flights:

    get:
      tags:
        - Flights
      security: 
        - nonameJWT: []
      parameters:
        - # Query Parameter destination
          name: destination
          in: query
          schema:
            $ref: "#/components/schemas/IATA"
      responses:
        "200":
          description: |
            Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Flight"
       
    post:
      tags:
        - Flights
      security: 
        - nonameJWT: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Flight"
      responses:
        "201":
          description: |
            Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Success

  /flights/{flight_id}:

    get:
      tags:
        - Flights
      security: 
        - nonameJWT: []
      parameters:
        - # flight_id path/URI parameter
          name: flight_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/FlightID"
      responses:
        "200":
          description: |
            Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Flight"


components:

  securitySchemes: 
    basicAuth:
      type: http
      scheme: Basic
    nonameJWT: 
      type: http
      scheme: Bearer

  schemas:
    User:
      type: object
      required:
        - username
        - password
        - email
        - app
      properties:
        id:
          type: integer
          format: int32
          example: 1
        username:
          type: string
          example: "John"
        password:
          type: string
          example: "Doe"
        email:
          type: string
          example: "John.Doe@acme.com"
        role:
          description: |
            Role is optional, use the default value.
          type: string
          enum:
            - admin
            - oper
            - user
          default: user
          example: user
        app:
          type: string
          example: Flights App
    FlightID:
      type: integer
      format: int32
      minimum: 1

    IATA:
      type: string
      pattern: ^[A-Z]{3}$
      example: CLE

    Flight:
      type: object
      required:
        - code
        - carrier
        - destination
        - origin
        - departure
        - price
        - plane
        - tseats
        - eseats
      properties:
        id:
          type: integer
          format: int32
          example: 1
        code:
          type: string
          example: ABCD1234
        carrier:
          type: string
          example: Delta
        destination:
          $ref: "#/components/schemas/IATA"
        origin:
          $ref: "#/components/schemas/IATA"
        departure:
          type: string
          example: 2025-01-01
        price:
          type: integer
          format: int32
          example: 999
        plane:
          type: string
          example: Boeing 777
        tseats:
          type: integer
          format: int32
          example: 290
        eseats:
          type: integer
          format: int32
          example: 10
